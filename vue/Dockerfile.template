FROM balenalib/intel-nuc-node:10-stretch-run

# Install other apt deps
RUN apt-get update && apt-get install -y --no-install-recommends \
  apt-utils \
  clang \
  xserver-xorg-core \
  xserver-xorg-input-all \
  xserver-xorg-video-fbdev \
  xorg \
  libegl1-mesa \
  libegl1-mesa-dev \
  libegl1-mesa-drivers \
  libgbm-dev \
  libgbm1 \
  libgl1-mesa-dev \
  libgl1-mesa-dri \
  libgl1-mesa-glx \
  libglapi-mesa \
  libgles1-mesa \
  libgles1-mesa-dev \
  libgles2-mesa \
  libgles2-mesa-dev \
  libosmesa6 \
  libosmesa6-dev \
  libwayland-egl1-mesa \
  libxatracker-dev \
  libxatracker2 \
  mesa-common-dev \
  mesa-opencl-icd \
  mesa-va-drivers \
  mesa-vdpau-drivers \
  mesa-vulkan-drivers \
  
  # libegl1-mesa \
  # libegl1-mesa-drivers \
  # libgl1-mesa-dri \
  # libgl1-mesa-glx \
  # libglapi-mesa \
  # libgles1-mesa \
  # libgles2-mesa \
  # libglu1-mesa \
  # libopenvg1-mesa \
  # libglx-mesa0 \ 
  # mesa-vulkan-drivers \

  libdbus-1-dev \
  libgtk2.0-dev \
  libgtk-3.0 \
  libnotify-dev \
  libtxc-dxtn-s2tc0 \
  xserver-xorg-video-intel \
  mesa-utils \
  mesa-utils-extra \
  libva-drm1 \
  libgl1-mesa-dev \
  libglu1-mesa-dev \
  freeglut3-dev \
  libdbus-1-dev \
  libgtk2.0-dev \
  libnotify-dev \
  libgnome-keyring-dev \
  libgconf2-dev \
  libasound2-dev \
  libcap-dev \
  libcups2-dev \
  libxtst-dev \
  libxss1 \
  libnss3-dev \
  fluxbox \
  libsmbclient \
  libssh-4 \
  fbset \
  alsa-utils \
  cups \
  system-config-printer \
libexpat-dev && rm -rf /var/lib/apt/lists/*

# Set Xorg and FLUXBOX preferences
# RUN mkdir ~/.fluxbox
# RUN echo "xset s off" > ~/.fluxbox/startup && echo "xserver-command=X -s 0 dpms" >> ~/.fluxbox/startup
# RUN echo "#!/bin/bash" > /etc/X11/xinit/xserverrc \
#   && echo "" >> /etc/X11/xinit/xserverrc \
#   && echo 'exec /usr/bin/X -s 0 dpms -nocursor -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc


# Move to app dir
WORKDIR /usr/src/app

# Move package.json to filesystem
COPY ./app/package.json ./
COPY ./app/files/ /usr/src/

RUN npm install -g @vue/cli
RUN npm install pm2 -g

# Install npm modules for the application
RUN JOBS=MAX npm install && npm cache clean --force
  # rm -rf /tmp/*

# Move app to filesystem
COPY ./app/ ./

RUN npm run build:pi

## uncomment if you want systemd
# ENV INITSYSTEM on
ENV UDEV=1


# Start app
CMD ["bash", "/usr/src/app/start.sh"]

